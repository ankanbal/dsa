package subset;

import java.util.ArrayList;
import java.util.HashMap;

// Given a word, write a function to generate all of its unique generalized abbreviations.
//
//Generalized abbreviation of a word can be generated by replacing each substring of the word by the count of characters in the substring.
// Take the example of “ab” which has four substrings: “”, “a”, “b”, and “ab”.
// After replacing these substrings in the actual word by the count of characters
// we get all the generalized abbreviations: “ab”, “1b”, “a1”, and “2”.
public class FGeneralizedAbbreviations {

    // Approach : Disclaimer, does not use BFS.
    // I just find this much easier to comprehend.
    // update hashmap with frequency of each character.
    // For BAT, Insert BAT
    // For loop on the characters in input
    // Loop 1: B -> Take all the values in answer array and replace B with '-' times frequency of B [BAT, -AT]
    // Loop 2 : A -> Take all the values in answer array and replace A with '-' times frequency of A [BAT, -AT, B-T, --T]
    // Loop 3 : T -> Take all the values in answer array and replace T with '-' times frequency of T [BAT, -AT, B-T, --T, BA-, -A-, B--, ---]

    // Finally, loop through all the answer strings and convert the '-' to the number. [BAT, 1AT, B1T, 2T, BA1, 1A1, B2, 3]
    public static ArrayList<String> generalize(String input) {
        ArrayList<String> answer = new ArrayList<>();

        // simple boundary conditions out of the way
        if (input == null || input.length() == 0) {
            return answer;
        }

        answer.add(input);

        for (int i = 0; i < input.length(); i++) {
            int newLength = answer.size();

            for (int j = 0; j < newLength; j++) {
                StringBuilder newString = new StringBuilder(answer.get(j));
                newString.replace(i, i + 1, "-");
                answer.add(newString.toString());
            }
        }

        for (int j = 0; j < answer.size(); j++) {
            String toCheck = answer.get(j);
            for (int i = 0; i < toCheck.length(); i++) {
                if (toCheck.charAt(i) == '-') {
                    int sum = 1;
                    int k = i + 1;
                    while (k < toCheck.length() && toCheck.charAt(k) == '-') {
                        k++;
                        sum++;
                    }
                    StringBuilder newString = new StringBuilder(toCheck);
                    newString.replace(i, k, Integer.toString(sum));
                    toCheck = newString.toString();
                    answer.set(j, toCheck);
                    i = k - sum;
                }
            }
        }

        return answer;
    }

    public static void main(String[] args) {
        System.out.println("Gen Ab : " + FGeneralizedAbbreviations.generalize("BAT"));
        System.out.println("Gen Ab : " + FGeneralizedAbbreviations.generalize("CODE"));
        System.out.println("Gen Ab : " + FGeneralizedAbbreviations.generalize("BOOK"));
        System.out.println("Gen Ab : " + FGeneralizedAbbreviations.generalize("TODAY"));
    }

}
